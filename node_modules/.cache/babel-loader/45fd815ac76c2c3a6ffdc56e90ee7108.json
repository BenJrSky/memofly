{"remainingRequest":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETClient.js","dependencies":[{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETClient.js","mtime":1630356691263},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1630067776591},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js","mtime":1630067775262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmRhdGUudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCBTdG9yZSBmcm9tICcuLi9zdG9yZS9zdG9yZSc7CmV4cG9ydCB2YXIgR0VUQ2xpZW50ID0gZnVuY3Rpb24gR0VUQ2xpZW50KGlkKSB7CiAgdmFyIHVybCA9ICJodHRwczovL3d3dy5tZW1vZmx5Lml0OjMwMDAvTVcvdjAuMS9jbGllbnRpLyIgKyBpZDsKICB2YXIgc3RvcmUgPSBuZXcgU3RvcmUoKTsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgdmFyIHVzZXJuYW1lID0gc3RvcmUuZ2V0KCdzZXNzaW9uJykudXNlcm5hbWU7CiAgICB2YXIgcGFzc3dvcmQgPSBzdG9yZS5nZXQoJ3Nlc3Npb24nKS5wYXNzd29yZDsKICAgIHZhciBhdXRoID0gJ0Jhc2ljICcgKyBCdWZmZXIuZnJvbSh1c2VybmFtZSArICI6IiArIHBhc3N3b3JkKS50b1N0cmluZygnYmFzZTY0Jyk7CiAgICBmZXRjaCh1cmwsIHsKICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgaGVhZGVyczogewogICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04JywKICAgICAgICAnYXV0aG9yaXphdGlvbic6IGF1dGgKICAgICAgfQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcCkgewogICAgICByZXR1cm4gcmVzcC5qc29uKCk7CiAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIHJlc29sdmUoZGF0YSk7CiAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyKSB7CiAgICAgIHJlamVjdChlcnIpOwogICAgfSk7CiAgfSk7Cn07"},{"version":3,"sources":["/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETClient.js"],"names":["Store","GETClient","id","url","store","Promise","resolve","reject","username","get","password","auth","Buffer","from","toString","fetch","method","headers","then","resp","json","data","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AAEA,OAAO,IAAIC,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAQ;AAE3B,MAAIC,GAAG,GAAG,iDAA+CD,EAAzD;AAEA,MAAIE,KAAK,GAAG,IAAIJ,KAAJ,EAAZ;AAEA,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAIC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAU,SAAV,EAAqBD,QAApC;AACA,QAAIE,QAAQ,GAAGN,KAAK,CAACK,GAAN,CAAU,SAAV,EAAqBC,QAApC;AAEA,QAAIC,IAAI,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYL,QAAQ,GAAG,GAAX,GAAiBE,QAA7B,EAAuCI,QAAvC,CAAgD,QAAhD,CAAtB;AAECC,IAAAA,KAAK,CAACZ,GAAD,EAAM;AACRa,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,OAAO,EAAE;AACP,wBAAgB,gCADT;AAEP,yBAAiBN;AAFV;AAFD,KAAN,CAAL,CAOAO,IAPA,CAOK,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,EAAV;AAAA,KAPL,EAQAF,IARA,CAQK,UAACG,IAAD,EAAQ;AACVf,MAAAA,OAAO,CAACe,IAAD,CAAP;AACH,KAVA,WAWM,UAACC,GAAD,EAAQ;AACXf,MAAAA,MAAM,CAACe,GAAD,CAAN;AACH,KAbA;AAgBJ,GAvBM,CAAP;AA+BH,CArCM","sourcesContent":["import Store from '../store/store';\n\nexport let GETClient = (id) => {\n\n    let url = \"https://www.memofly.it:3000/MW/v0.1/clienti/\"+id;\n\n    let store = new Store;\n\n    return new Promise((resolve, reject) => {\n\n        let username = store.get('session').username;\n        let password = store.get('session').password;\n\n        let auth = 'Basic ' + Buffer.from(username + \":\" + password).toString('base64');\n\n         fetch(url, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json;charset=utf-8',\n              'authorization': auth\n            },\n        })\n        .then((resp) => resp.json())\n        .then((data)=>{\n            resolve(data);\n        })\n        .catch((err) =>{\n            reject(err)\n        })\n\n\n    });\n    \n    \n\n\n\n\n\n}"]}]}