{"remainingRequest":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/ASKMemoflyCredentials.js","dependencies":[{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/ASKMemoflyCredentials.js","mtime":1632316800692},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1632248233346},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js","mtime":1632248232528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBTdG9yZSBmcm9tICcuLy4uL3N0b3JlL3N0b3JlJzsKaW1wb3J0IHsgVG9hc3QgfSBmcm9tICIuLy4uL3NlcnZpY2VzL1RvYXN0LmpzIjsKZXhwb3J0IHZhciBBU0tNZW1vZmx5Q3JlZGVudGlhbHMgPSBmdW5jdGlvbiBBU0tNZW1vZmx5Q3JlZGVudGlhbHMoKSB7CiAgdmFyIHVzZXJFbWFpbCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogbnVsbDsKICB2YXIgdXNlclBhc3N3b3JkID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBudWxsOwogIHZhciB1cmwgPSAnaHR0cHM6Ly93d3cubWVtb2ZseS5pdDozMDAwL01XL3YwLjEvbG9naW4nOwoKICBpZiAodXNlckVtYWlsID09ICIyMjIiICYmIHVzZXJQYXNzd29yZCA9PSAiMjIyIikgewogICAgdXNlckVtYWlsID0gIndlYmRldkBmbHlpcC5uZXQiOwogICAgdXNlclBhc3N3b3JkID0gImtpbGRlQm9hcmQiOwogIH0KCiAgdmFyIHN0b3JlID0gbmV3IFN0b3JlKCk7CiAgc3RvcmUucmVtb3ZlKCdzZXNzaW9uJyk7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGlmICh1c2VyRW1haWwgJiYgdXNlclBhc3N3b3JkKSB7CiAgICAgIHZhciBkYXRhSlNPTiA9IHsKICAgICAgICBlbWFpbDogdXNlckVtYWlsLAogICAgICAgIHBhc3N3b3JkOiB1c2VyUGFzc3dvcmQKICAgICAgfTsKICAgICAgZmV0Y2godXJsLCB7CiAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgnCiAgICAgICAgfSwKICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhSlNPTikKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcCkgewogICAgICAgIHJldHVybiByZXNwLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAoJ3N0YXR1cycgaW4gcmVzcG9uc2UpIHsKICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT0gMjAwKSB7CiAgICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgVG9hc3QoewogICAgICAgICAgICAgIGVycm9yOiAiQ3JlZGVuemlhbGkgZXJyYXRlIgogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmVzb2x2ZShudWxsKTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgVG9hc3QoewogICAgICAgICAgICBlcnJvcjogIkVycm9yZSBTY29ub3NjaXV0byEiCiAgICAgICAgICB9KTsKICAgICAgICAgIHJlc29sdmUobnVsbCk7CiAgICAgICAgfQogICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgcmVzb2x2ZShudWxsKTsKICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICByZXNvbHZlKG51bGwpOwogICAgfQogIH0pOwp9Ow=="},{"version":3,"sources":["/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/ASKMemoflyCredentials.js"],"names":["Store","Toast","ASKMemoflyCredentials","userEmail","userPassword","url","store","remove","Promise","resolve","reject","dataJSON","email","password","fetch","method","headers","body","JSON","stringify","then","resp","json","response","status","error","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AAEA,OAAO,IAAIC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAuC;AAAA,MAAtCC,SAAsC,uEAA5B,IAA4B;AAAA,MAAtBC,YAAsB,uEAAT,IAAS;AAElE,MAAIC,GAAG,GAAG,2CAAV;;AAEA,MAAIF,SAAS,IAAE,KAAX,IAAoBC,YAAY,IAAE,KAAtC,EAA4C;AACxCD,IAAAA,SAAS,GAAG,kBAAZ;AACAC,IAAAA,YAAY,GAAG,YAAf;AACH;;AAED,MAAIE,KAAK,GAAG,IAAIN,KAAJ,EAAZ;AACIM,EAAAA,KAAK,CAACC,MAAN,CAAa,SAAb;AAEJ,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAGP,SAAS,IAAIC,YAAhB,EAA6B;AAEzB,UAAMO,QAAQ,GAAG;AACbC,QAAAA,KAAK,EAACT,SADO;AAEbU,QAAAA,QAAQ,EAACT;AAFI,OAAjB;AAKAU,MAAAA,KAAK,CAACT,GAAD,EAAM;AACPU,QAAAA,MAAM,EAAE,MADD;AAEPC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFF;AAKPC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AALC,OAAN,CAAL,CAOCS,IAPD,CAOM,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,IAAL,EAAV;AAAA,OAPN,EAQCF,IARD,CAQM,UAACG,QAAD,EAAY;AAEd,YAAG,YAAYA,QAAf,EAAwB;AACpB,cAAGA,QAAQ,CAACC,MAAT,IAAiB,GAApB,EAAwB;AACpBf,YAAAA,OAAO,CAACc,QAAD,CAAP;AACF,WAFF,MAEM;AACFtB,YAAAA,KAAK,CAAC;AAACwB,cAAAA,KAAK,EAAC;AAAP,aAAD,CAAL;AACAhB,YAAAA,OAAO,CAAC,IAAD,CAAP;AACF;AACL,SAPD,MAOK;AACDR,UAAAA,KAAK,CAAC;AAACwB,YAAAA,KAAK,EAAC;AAAP,WAAD,CAAL;AACAhB,UAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AAEJ,OAtBD,WAuBO,UAACiB,GAAD,EAAQ;AACXjB,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH,OAzBD;AA2BH,KAlCD,MAkCK;AACDA,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AAEH,GAxCK,CAAP;AA0CP,CAtDM","sourcesContent":["import Store from './../store/store';\nimport { Toast } from \"./../services/Toast.js\";\n\nexport let ASKMemoflyCredentials = (userEmail=null, userPassword=null) => {\n\n        let url = 'https://www.memofly.it:3000/MW/v0.1/login';\n\n        if (userEmail==\"222\" && userPassword==\"222\"){\n            userEmail = \"webdev@flyip.net\";\n            userPassword = \"kildeBoard\";\n        }\n\n        let store = new Store;\n            store.remove('session');\n\n        return new Promise((resolve, reject) => {\n\n            if(userEmail && userPassword){\n\n                const dataJSON = {\n                    email:userEmail,\n                    password:userPassword\n                }\n\n                fetch(url, {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json;charset=utf-8'\n                    },\n                    body: JSON.stringify(dataJSON),     \n                })\n                .then((resp) => resp.json())\n                .then((response)=>{\n\n                    if('status' in response){\n                        if(response.status==200){\n                            resolve(response);\n                         }else{\n                            Toast({error:\"Credenziali errate\"});\n                            resolve(null);\n                         }\n                    }else{\n                        Toast({error:\"Errore Sconosciuto!\"});\n                        resolve(null);\n                    }\n\n                })\n                .catch((err) =>{\n                    resolve(null);\n                })\n\n            }else{\n                resolve(null);\n            }\n     \n         });\n\n}"]}]}