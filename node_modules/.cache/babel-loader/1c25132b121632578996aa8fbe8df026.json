{"remainingRequest":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETService.js","dependencies":[{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETService.js","mtime":1630356691268},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1630067776591},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js","mtime":1630067775262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmRhdGUudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCBTdG9yZSBmcm9tICcuLy4uL3N0b3JlL3N0b3JlJzsKZXhwb3J0IHZhciBHRVRTZXJ2aWNlID0gZnVuY3Rpb24gR0VUU2VydmljZShpZCkgewogIHZhciB1cmwgPSAiaHR0cHM6Ly93d3cubWVtb2ZseS5pdDozMDAwL01XL3YwLjEvc2Vydml6aS8iICsgaWQ7CiAgdmFyIHN0b3JlID0gbmV3IFN0b3JlKCk7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIHZhciB1c2VybmFtZSA9IHN0b3JlLmdldCgnc2Vzc2lvbicpLnVzZXJuYW1lOwogICAgdmFyIHBhc3N3b3JkID0gc3RvcmUuZ2V0KCdzZXNzaW9uJykucGFzc3dvcmQ7CiAgICB2YXIgYXV0aCA9ICdCYXNpYyAnICsgQnVmZmVyLmZyb20odXNlcm5hbWUgKyAiOiIgKyBwYXNzd29yZCkudG9TdHJpbmcoJ2Jhc2U2NCcpOwogICAgZmV0Y2godXJsLCB7CiAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgIGhlYWRlcnM6IHsKICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCcsCiAgICAgICAgJ2F1dGhvcml6YXRpb24nOiBhdXRoCiAgICAgIH0KICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgcmV0dXJuIHJlc3AuanNvbigpOwogICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICByZXNvbHZlKGRhdGEpOwogICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycikgewogICAgICByZWplY3QoZXJyKTsKICAgIH0pOwogIH0pOwp9Ow=="},{"version":3,"sources":["/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETService.js"],"names":["Store","GETService","id","url","store","Promise","resolve","reject","username","get","password","auth","Buffer","from","toString","fetch","method","headers","then","resp","json","data","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAEA,OAAO,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAQ;AAE5B,MAAIC,GAAG,GAAG,iDAA+CD,EAAzD;AAEA,MAAIE,KAAK,GAAG,IAAIJ,KAAJ,EAAZ;AAEA,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAIC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAU,SAAV,EAAqBD,QAApC;AACA,QAAIE,QAAQ,GAAGN,KAAK,CAACK,GAAN,CAAU,SAAV,EAAqBC,QAApC;AAEA,QAAIC,IAAI,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYL,QAAQ,GAAG,GAAX,GAAiBE,QAA7B,EAAuCI,QAAvC,CAAgD,QAAhD,CAAtB;AAECC,IAAAA,KAAK,CAACZ,GAAD,EAAM;AACRa,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,OAAO,EAAE;AACP,wBAAgB,gCADT;AAEP,yBAAiBN;AAFV;AAFD,KAAN,CAAL,CAOAO,IAPA,CAOK,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,EAAV;AAAA,KAPL,EAQAF,IARA,CAQK,UAACG,IAAD,EAAQ;AACVf,MAAAA,OAAO,CAACe,IAAD,CAAP;AACH,KAVA,WAWM,UAACC,GAAD,EAAQ;AACXf,MAAAA,MAAM,CAACe,GAAD,CAAN;AACH,KAbA;AAgBJ,GAvBM,CAAP;AA+BH,CArCM","sourcesContent":["import Store from './../store/store';\n\nexport let GETService = (id) => {\n\n    let url = \"https://www.memofly.it:3000/MW/v0.1/servizi/\"+id;\n\n    let store = new Store;\n\n    return new Promise((resolve, reject) => {\n\n        let username = store.get('session').username;\n        let password = store.get('session').password;\n\n        let auth = 'Basic ' + Buffer.from(username + \":\" + password).toString('base64');\n\n         fetch(url, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json;charset=utf-8',\n              'authorization': auth\n            },\n        })\n        .then((resp) => resp.json())\n        .then((data)=>{\n            resolve(data);\n        })\n        .catch((err) =>{\n            reject(err)\n        })\n\n\n    });\n    \n    \n\n\n\n\n\n}"]}]}