{"remainingRequest":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/profile/GETProfiloAppuntamentiAnno.js","dependencies":[{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/profile/GETProfiloAppuntamentiAnno.js","mtime":1632248241637},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1632248233346},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js","mtime":1632248232528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmRhdGUudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCBTdG9yZSBmcm9tICcuLi8uLi9zdG9yZS9zdG9yZSc7CmV4cG9ydCB2YXIgR0VUUHJvZmlsb0FwcHVudGFtZW50aUFubm8gPSBmdW5jdGlvbiBHRVRQcm9maWxvQXBwdW50YW1lbnRpQW5ubyhwaG9uZSkgewogIHZhciB1cmwgPSAiaHR0cHM6Ly93d3cubWVtb2ZseS5pdDozMDAwL01XL3YwLjEvY2xpZW50ZUFwcHVudGFtZW50aUFubm8vIiArIHBob25lOwogIHZhciBzdG9yZSA9IG5ldyBTdG9yZSgpOwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICB2YXIgdXNlcm5hbWUgPSBzdG9yZS5nZXQoJ3Nlc3Npb24nKS51c2VybmFtZTsKICAgIHZhciBwYXNzd29yZCA9IHN0b3JlLmdldCgnc2Vzc2lvbicpLnBhc3N3b3JkOwogICAgdmFyIGF1dGggPSAnQmFzaWMgJyArIEJ1ZmZlci5mcm9tKHVzZXJuYW1lICsgIjoiICsgcGFzc3dvcmQpLnRvU3RyaW5nKCdiYXNlNjQnKTsKICAgIGZldGNoKHVybCwgewogICAgICBtZXRob2Q6ICdHRVQnLAogICAgICBoZWFkZXJzOiB7CiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgnLAogICAgICAgICdhdXRob3JpemF0aW9uJzogYXV0aAogICAgICB9CiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgIHJldHVybiByZXNwLmpzb24oKTsKICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgcmVzb2x2ZShkYXRhKTsKICAgIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgcmVqZWN0KGVycik7CiAgICB9KTsKICB9KTsKfTs="},{"version":3,"sources":["/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/profile/GETProfiloAppuntamentiAnno.js"],"names":["Store","GETProfiloAppuntamentiAnno","phone","url","store","Promise","resolve","reject","username","get","password","auth","Buffer","from","toString","fetch","method","headers","then","resp","json","data","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,mBAAlB;AAEA,OAAO,IAAIC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,KAAD,EAAW;AAE/C,MAAIC,GAAG,GAAG,iEAA+DD,KAAzE;AAEA,MAAIE,KAAK,GAAG,IAAIJ,KAAJ,EAAZ;AAEA,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAIC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAU,SAAV,EAAqBD,QAApC;AACA,QAAIE,QAAQ,GAAGN,KAAK,CAACK,GAAN,CAAU,SAAV,EAAqBC,QAApC;AAEA,QAAIC,IAAI,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYL,QAAQ,GAAG,GAAX,GAAiBE,QAA7B,EAAuCI,QAAvC,CAAgD,QAAhD,CAAtB;AAECC,IAAAA,KAAK,CAACZ,GAAD,EAAM;AACRa,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,OAAO,EAAE;AACP,wBAAgB,gCADT;AAEP,yBAAiBN;AAFV;AAFD,KAAN,CAAL,CAOAO,IAPA,CAOK,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,EAAV;AAAA,KAPL,EAQAF,IARA,CAQK,UAACG,IAAD,EAAQ;AACVf,MAAAA,OAAO,CAACe,IAAD,CAAP;AACH,KAVA,WAWM,UAACC,GAAD,EAAQ;AACXf,MAAAA,MAAM,CAACe,GAAD,CAAN;AACH,KAbA;AAgBJ,GAvBM,CAAP;AA+BH,CArCM","sourcesContent":["import Store from '../../store/store';\n\nexport let GETProfiloAppuntamentiAnno = (phone) => {\n\n    let url = \"https://www.memofly.it:3000/MW/v0.1/clienteAppuntamentiAnno/\"+phone;\n\n    let store = new Store;\n\n    return new Promise((resolve, reject) => {\n\n        let username = store.get('session').username;\n        let password = store.get('session').password;\n\n        let auth = 'Basic ' + Buffer.from(username + \":\" + password).toString('base64');\n\n         fetch(url, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json;charset=utf-8',\n              'authorization': auth\n            },\n        })\n        .then((resp) => resp.json())\n        .then((data)=>{\n            resolve(data);\n        })\n        .catch((err) =>{\n            reject(err)\n        })\n\n\n    });\n    \n    \n\n\n\n\n\n}"]}]}