{"remainingRequest":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETLogin.js","dependencies":[{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETLogin.js","mtime":1631220593688},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1630067776591},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js","mtime":1630067775262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCBTdG9yZSBmcm9tICcuLy4uL3N0b3JlL3N0b3JlJzsKaW1wb3J0IHJvdXRlciBmcm9tICcuLy4uL3JvdXRlci9pbmRleC50cyc7CmV4cG9ydCB2YXIgR0VUTG9naW4gPSBmdW5jdGlvbiBHRVRMb2dpbigpIHsKICB2YXIgdXNlcm5hbWUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IG51bGw7CiAgdmFyIHBhc3N3b3JkID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBudWxsOwoKICBpZiAodXNlcm5hbWUgPT0gIjExMSIgJiYgcGFzc3dvcmQgPT0gJzExMScpIHsKICAgIHVzZXJuYW1lID0gInVuaXF1ZW9yaXN0YW5vQGdtYWlsLmNvbTY5NzU5NyI7CiAgICBwYXNzd29yZCA9ICJ6NjNJVnVvQFB2MUIiOwogIH0KCiAgaWYgKHVzZXJuYW1lID09ICIyMjIiICYmIHBhc3N3b3JkID09ICIyMjIiKSB7CiAgICB1c2VybmFtZSA9ICJ3ZWJkZXZAZmx5aXAubmV0MjczMDE5IjsKICAgIHBhc3N3b3JkID0gImZuNyhCNzNIaU9zcCI7CiAgfQoKICB2YXIgYXV0aCA9ICdCYXNpYyAnICsgQnVmZmVyLmZyb20odXNlcm5hbWUgKyAiOiIgKyBwYXNzd29yZCkudG9TdHJpbmcoJ2Jhc2U2NCcpOwogIHZhciB1cmwgPSAnaHR0cHM6Ly93d3cubWVtb2ZseS5pdDozMDAwL01XL3YwLjEvdXNlcic7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGlmICh1c2VybmFtZSAmJiBwYXNzd29yZCkgewogICAgICBmZXRjaCh1cmwsIHsKICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04JywKICAgICAgICAgICdhdXRob3JpemF0aW9uJzogYXV0aAogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcCkgewogICAgICAgIHJldHVybiByZXNwLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIGlmIChkYXRhLmhhc093blByb3BlcnR5KCdzdGF0dXMnKSkgewogICAgICAgICAgaWYgKGRhdGEuc3RhdHVzID09IDIwMCkgewogICAgICAgICAgICB2YXIgc3RvcmUgPSBuZXcgU3RvcmUoKTsKICAgICAgICAgICAgc3RvcmUuc2V0KCdzZXNzaW9uJywgewogICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwKICAgICAgICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQsCiAgICAgICAgICAgICAgbG9nZ2VkOiB0cnVlCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXNvbHZlKHJvdXRlci5wdXNoKCcvJykpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIF9zdG9yZSA9IG5ldyBTdG9yZSgpOwoKICAgICAgICAgICAgX3N0b3JlLnJlbW92ZSgnc2Vzc2lvbicpOwoKICAgICAgICAgICAgcmVzb2x2ZShmYWxzZSk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHZhciBfc3RvcmUyID0gbmV3IFN0b3JlKCk7CgogICAgICAgICAgX3N0b3JlMi5yZW1vdmUoJ3Nlc3Npb24nKTsKCiAgICAgICAgICByZXNvbHZlKGZhbHNlKTsKICAgICAgICB9CiAgICAgIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICB2YXIgc3RvcmUgPSBuZXcgU3RvcmUoKTsKICAgICAgICBzdG9yZS5yZW1vdmUoJ3Nlc3Npb24nKTsKICAgICAgICByZXNvbHZlKGZhbHNlKTsKICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICB2YXIgc3RvcmUgPSBuZXcgU3RvcmUoKTsKICAgICAgc3RvcmUucmVtb3ZlKCdzZXNzaW9uJyk7CiAgICAgIHJlc29sdmUoZmFsc2UpOwogICAgfQogIH0pOwp9Ow=="},{"version":3,"sources":["/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETLogin.js"],"names":["Store","router","GETLogin","username","password","auth","Buffer","from","toString","url","Promise","resolve","reject","fetch","method","headers","then","resp","json","data","hasOwnProperty","status","store","set","logged","push","remove","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAO,IAAIC,QAAQ,GAAG,SAAXA,QAAW,GAAkC;AAAA,MAAjCC,QAAiC,uEAAxB,IAAwB;AAAA,MAAlBC,QAAkB,uEAAT,IAAS;;AAE5C,MAAGD,QAAQ,IAAE,KAAV,IAAmBC,QAAQ,IAAE,KAAhC,EAAsC;AAClCD,IAAAA,QAAQ,GAAG,gCAAX;AACAC,IAAAA,QAAQ,GAAG,cAAX;AACH;;AAED,MAAID,QAAQ,IAAE,KAAV,IAAmBC,QAAQ,IAAE,KAAjC,EAAuC;AACnCD,IAAAA,QAAQ,GAAG,wBAAX;AACAC,IAAAA,QAAQ,GAAG,cAAX;AACH;;AAEL,MAAIC,IAAI,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYJ,QAAQ,GAAG,GAAX,GAAiBC,QAA7B,EAAuCI,QAAvC,CAAgD,QAAhD,CAAtB;AAEA,MAAIC,GAAG,GAAG,0CAAV;AAEA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAGT,QAAQ,IAAIC,QAAf,EAAwB;AAEpBS,MAAAA,KAAK,CAACJ,GAAD,EAAM;AACPK,QAAAA,MAAM,EAAE,KADD;AAEPC,QAAAA,OAAO,EAAE;AACP,0BAAgB,gCADT;AAEP,2BAAiBV;AAFV;AAFF,OAAN,CAAL,CAOCW,IAPD,CAOM,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,IAAL,EAAV;AAAA,OAPN,EAQCF,IARD,CAQM,UAACG,IAAD,EAAQ;AAEV,YAAGA,IAAI,CAACC,cAAL,CAAoB,QAApB,CAAH,EAAiC;AAC7B,cAAGD,IAAI,CAACE,MAAL,IAAa,GAAhB,EAAoB;AAChB,gBAAIC,KAAK,GAAG,IAAItB,KAAJ,EAAZ;AACIsB,YAAAA,KAAK,CAACC,GAAN,CAAU,SAAV,EAAoB;AAACpB,cAAAA,QAAQ,EAACA,QAAV;AAAmBC,cAAAA,QAAQ,EAACA,QAA5B;AAAqCoB,cAAAA,MAAM,EAAC;AAA5C,aAApB;AACJb,YAAAA,OAAO,CAACV,MAAM,CAACwB,IAAP,CAAY,GAAZ,CAAD,CAAP;AACF,WAJF,MAIM;AACF,gBAAIH,MAAK,GAAG,IAAItB,KAAJ,EAAZ;;AACIsB,YAAAA,MAAK,CAACI,MAAN,CAAa,SAAb;;AACJf,YAAAA,OAAO,CAAC,KAAD,CAAP;AACF;AACL,SAVD,MAUK;AACD,cAAIW,OAAK,GAAG,IAAItB,KAAJ,EAAZ;;AACIsB,UAAAA,OAAK,CAACI,MAAN,CAAa,SAAb;;AACJf,UAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AAEJ,OA1BD,WA2BO,UAACgB,GAAD,EAAQ;AACX,YAAIL,KAAK,GAAG,IAAItB,KAAJ,EAAZ;AACIsB,QAAAA,KAAK,CAACI,MAAN,CAAa,SAAb;AACJf,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH,OA/BD;AAiCH,KAnCD,MAmCK;AACD,UAAIW,KAAK,GAAG,IAAItB,KAAJ,EAAZ;AACIsB,MAAAA,KAAK,CAACI,MAAN,CAAa,SAAb;AACJf,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AAKH,GA9CK,CAAP;AA2DP,CA3EM","sourcesContent":["import Store from './../store/store';\nimport router from './../router/index.ts';\n\nexport let GETLogin = (username=null, password=null) => {\n\n            if(username==\"111\" && password=='111'){\n                username = \"uniqueoristano@gmail.com697597\";\n                password = \"z63IVuo@Pv1B\";\n            }\n\n            if (username==\"222\" && password==\"222\"){\n                username = \"webdev@flyip.net273019\";\n                password = \"fn7(B73HiOsp\";\n            }\n\n        let auth = 'Basic ' + Buffer.from(username + \":\" + password).toString('base64');\n\n        let url = 'https://www.memofly.it:3000/MW/v0.1/user';\n\n        return new Promise((resolve, reject) => {\n\n            if(username && password){\n\n                fetch(url, {\n                    method: 'GET',\n                    headers: {\n                      'Content-Type': 'application/json;charset=utf-8',\n                      'authorization': auth\n                    }          \n                })\n                .then((resp) => resp.json())\n                .then((data)=>{\n                \n                    if(data.hasOwnProperty('status')){\n                        if(data.status==200){\n                            let store = new Store;\n                                store.set('session',{username:username,password:password,logged:true});\n                            resolve(router.push('/'));\n                         }else{\n                            let store = new Store;\n                                store.remove('session');\n                            resolve(false);\n                         }\n                    }else{\n                        let store = new Store;\n                            store.remove('session');\n                        resolve(false);\n                    }\n\n                })\n                .catch((err) =>{\n                    let store = new Store;\n                        store.remove('session');\n                    resolve(false);\n                })\n\n            }else{\n                let store = new Store;\n                    store.remove('session');\n                resolve(false);\n            }\n     \n             \n     \n     \n         });\n\n\n\n\n\n    \n    \n\n\n\n\n\n}"]}]}