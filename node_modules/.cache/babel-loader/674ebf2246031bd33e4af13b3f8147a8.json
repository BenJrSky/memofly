{"remainingRequest":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETUser.js","dependencies":[{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETUser.js","mtime":1630356691270},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1630067776591},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js","mtime":1630067775262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmRhdGUudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCBTdG9yZSBmcm9tICcuLy4uL3N0b3JlL3N0b3JlJzsKZXhwb3J0IHZhciBHRVRVc2VyID0gZnVuY3Rpb24gR0VUVXNlcigpIHsKICB2YXIgdXJsID0gJ2h0dHBzOi8vd3d3Lm1lbW9mbHkuaXQ6MzAwMC9NVy92MC4xL3VzZXInOwogIHZhciBzdG9yZSA9IG5ldyBTdG9yZSgpOwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICB2YXIgdXNlcm5hbWUgPSBzdG9yZS5nZXQoJ3Nlc3Npb24nKS51c2VybmFtZTsKICAgIHZhciBwYXNzd29yZCA9IHN0b3JlLmdldCgnc2Vzc2lvbicpLnBhc3N3b3JkOwogICAgdmFyIGF1dGggPSAnQmFzaWMgJyArIEJ1ZmZlci5mcm9tKHVzZXJuYW1lICsgIjoiICsgcGFzc3dvcmQpLnRvU3RyaW5nKCdiYXNlNjQnKTsKICAgIGZldGNoKHVybCwgewogICAgICBtZXRob2Q6ICdHRVQnLAogICAgICBoZWFkZXJzOiB7CiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgnLAogICAgICAgICdhdXRob3JpemF0aW9uJzogYXV0aAogICAgICB9CiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgIHJldHVybiByZXNwLmpzb24oKTsKICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgY29uc29sZS5sb2coZGF0YSk7CiAgICAgIHJlc29sdmUoZGF0YSk7CiAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyKSB7CiAgICAgIHJlamVjdChlcnIpOwogICAgfSk7CiAgfSk7Cn07"},{"version":3,"sources":["/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETUser.js"],"names":["Store","GETUser","url","store","Promise","resolve","reject","username","get","password","auth","Buffer","from","toString","fetch","method","headers","then","resp","json","data","console","log","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAEA,OAAO,IAAIC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAEvB,MAAIC,GAAG,GAAG,0CAAV;AAEA,MAAIC,KAAK,GAAG,IAAIH,KAAJ,EAAZ;AAEA,SAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAIC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAU,SAAV,EAAqBD,QAApC;AACA,QAAIE,QAAQ,GAAGN,KAAK,CAACK,GAAN,CAAU,SAAV,EAAqBC,QAApC;AAEA,QAAIC,IAAI,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYL,QAAQ,GAAG,GAAX,GAAiBE,QAA7B,EAAuCI,QAAvC,CAAgD,QAAhD,CAAtB;AAECC,IAAAA,KAAK,CAACZ,GAAD,EAAM;AACRa,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,OAAO,EAAE;AACP,wBAAgB,gCADT;AAEP,yBAAiBN;AAFV;AAFD,KAAN,CAAL,CAOAO,IAPA,CAOK,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,EAAV;AAAA,KAPL,EAQAF,IARA,CAQK,UAACG,IAAD,EAAQ;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAf,MAAAA,OAAO,CAACe,IAAD,CAAP;AACH,KAXA,WAYM,UAACG,GAAD,EAAQ;AACXjB,MAAAA,MAAM,CAACiB,GAAD,CAAN;AACH,KAdA;AAiBJ,GAxBM,CAAP;AAgCH,CAtCM","sourcesContent":["import Store from './../store/store';\n\nexport let GETUser = () => {\n\n    let url = 'https://www.memofly.it:3000/MW/v0.1/user';\n\n    let store = new Store;\n\n    return new Promise((resolve, reject) => {\n\n        let username = store.get('session').username;\n        let password = store.get('session').password;\n\n        let auth = 'Basic ' + Buffer.from(username + \":\" + password).toString('base64');\n\n         fetch(url, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json;charset=utf-8',\n              'authorization': auth\n            }          \n        })\n        .then((resp) => resp.json())\n        .then((data)=>{\n            console.log(data)\n            resolve(data);\n        })\n        .catch((err) =>{\n            reject(err)\n        })\n\n\n    });\n    \n    \n\n\n\n\n\n}"]}]}