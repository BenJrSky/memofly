{"remainingRequest":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETMessaggi.js","dependencies":[{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETMessaggi.js","mtime":1632248241629},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1632248233346},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js","mtime":1632248232528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmV4cG9ydCB2YXIgR0VUTWVzc2FnZ2kgPSBmdW5jdGlvbiBHRVRNZXNzYWdnaShpZCkgewogIHZhciB1cmwgPSAiaHR0cHM6Ly93d3cubWVtb2ZseS5pdDozMDAwL01XL3YwLjEvbWVzc2FnZ2kiOwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBmZXRjaCh1cmwsIHsKICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgaGVhZGVyczogewogICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04JywKICAgICAgICAnYXV0aG9yaXphdGlvbic6ICdCYXNpYyBkMlZpWkdWMlFHWnNlV2x3TG01bGRESTNNekF4T1RwbWJqY29RamN6U0dsUGMzQT0nCiAgICAgIH0KICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgcmV0dXJuIHJlc3AuanNvbigpOwogICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICByZXNvbHZlKGRhdGEpOwogICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycikgewogICAgICByZWplY3QoZXJyKTsKICAgIH0pOwogIH0pOwp9Ow=="},{"version":3,"sources":["/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/memoFly-api/GETMessaggi.js"],"names":["GETMessaggi","id","url","Promise","resolve","reject","fetch","method","headers","then","resp","json","data","err"],"mappings":";AAAA,OAAO,IAAIA,WAAW,GAAG,SAAdA,WAAc,CAACC,EAAD,EAAQ;AAE7B,MAAIC,GAAG,GAAG,8CAAV;AAEA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpCC,IAAAA,KAAK,CAACJ,GAAD,EAAM;AACPK,MAAAA,MAAM,EAAE,KADD;AAEPC,MAAAA,OAAO,EAAE;AACL,wBAAgB,gCADX;AAEL,yBAAiB;AAFZ;AAFF,KAAN,CAAL,CAOKC,IAPL,CAOU,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,EAAV;AAAA,KAPV,EAQKF,IARL,CAQU,UAACG,IAAD,EAAQ;AACVR,MAAAA,OAAO,CAACQ,IAAD,CAAP;AACH,KAVL,WAWW,UAACC,GAAD,EAAQ;AACXR,MAAAA,MAAM,CAACQ,GAAD,CAAN;AACH,KAbL;AAgBH,GAlBM,CAAP;AAmBH,CAvBM","sourcesContent":["export let GETMessaggi = (id) => {\r\n\r\n    let url = \"https://www.memofly.it:3000/MW/v0.1/messaggi\";\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                'authorization': 'Basic d2ViZGV2QGZseWlwLm5ldDI3MzAxOTpmbjcoQjczSGlPc3A='\r\n            },\r\n        })\r\n            .then((resp) => resp.json())\r\n            .then((data)=>{\r\n                resolve(data);\r\n            })\r\n            .catch((err) =>{\r\n                reject(err)\r\n            })\r\n\r\n\r\n    });\r\n}"]}]}