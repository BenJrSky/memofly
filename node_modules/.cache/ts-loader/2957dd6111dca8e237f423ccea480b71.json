{"remainingRequest":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/ts-loader/index.js??ref--13-2!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/components/CalendarSet.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/components/CalendarSet.vue","mtime":1632248241593},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1632248233346},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js","mtime":1632248232528},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/ts-loader/index.js","mtime":1632248240050},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1632248233346},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/index.js","mtime":1632248240770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2Jlbi9EZXNrdG9wL0JFTi9XT1JLUy9GTFlJUC9WVUUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIgZnJvbSAiL1VzZXJzL2Jlbi9EZXNrdG9wL0JFTi9XT1JLUy9GTFlJUC9WVUUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9Vc2Vycy9iZW4vRGVza3RvcC9CRU4vV09SS1MvRkxZSVAvVlVFL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2Jlbi9EZXNrdG9wL0JFTi9XT1JLUy9GTFlJUC9WVUUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvVXNlcnMvYmVuL0Rlc2t0b3AvQkVOL1dPUktTL0ZMWUlQL1ZVRS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMiOwppbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gIi9Vc2Vycy9iZW4vRGVza3RvcC9CRU4vV09SS1MvRkxZSVAvVlVFL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKaW1wb3J0IHsgQ29tcG9uZW50LCBWdWUgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsKaW1wb3J0IHsgR0VUVXNlciB9IGZyb20gIi4uL21lbW9GbHktYXBpL0dFVFVzZXIuanMiOwppbXBvcnQgeyBHRVRDYWxlbmRhcnMgfSBmcm9tICIuLi9tZW1vRmx5LWFwaS9HRVRDYWxlbmRhcnMuanMiOwppbXBvcnQgeyBQVVRDYWxlbmRhcnMgfSBmcm9tICIuLi9tZW1vRmx5LWFwaS9QVVRDYWxlbmRhcnMuanMiOwppbXBvcnQgeyBUb2FzdCB9IGZyb20gIi4uL3NlcnZpY2VzL1RvYXN0LmpzIjsKCnZhciBDYWxlbmRhclNldCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1Z1ZSkgewogIF9pbmhlcml0cyhDYWxlbmRhclNldCwgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQ2FsZW5kYXJTZXQpOwoKICBmdW5jdGlvbiBDYWxlbmRhclNldCgpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2FsZW5kYXJTZXQpOwoKICAgIF90aGlzID0gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICBfdGhpcy5kaXNhYmxlZCA9IHRydWU7CiAgICBfdGhpcy5jb21wYW55ID0gW107CiAgICBfdGhpcy5jYWxlbmRhckxpc3QgPSBbXTsKICAgIF90aGlzLnNlbGVjdGVkQ2FsZW5kYXJzID0gW107CiAgICBfdGhpcy5jYWxlbmRhckxpbWl0ID0gMDsKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhDYWxlbmRhclNldCwgW3sKICAgIGtleTogImRhdGEiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgY29tcGFueTogdGhpcy5jb21wYW55LAogICAgICAgIGNhbGVuZGFyTGlzdDogdGhpcy5jYWxlbmRhckxpc3QsCiAgICAgICAgY2FsZW5kYXJMaW1pdDogdGhpcy5jYWxlbmRhckxpbWl0LAogICAgICAgIHNlbGVjdGVkQ2FsZW5kYXJzOiB0aGlzLnNlbGVjdGVkQ2FsZW5kYXJzCiAgICAgIH07CiAgICB9CiAgfSwgewogICAga2V5OiAibW91bnRlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmRpc2FibGVkID0gdHJ1ZTsKICAgICAgR0VUVXNlcigpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSAyMDApIHsKICAgICAgICAgIF90aGlzMi5wcm9jZXNzVXNlcihyZXNwb25zZS5kYXRhKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMyLmNvbXBhbnkgPSBbXTsKICAgICAgICB9CiAgICAgIH0pWyJmaW5hbGx5Il0oZnVuY3Rpb24gKCkgewogICAgICAgIEdFVENhbGVuZGFycygpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBfdGhpczIuY2FsZW5kYXJMaXN0ID0gW107CgogICAgICAgICAgZm9yICh2YXIgY2FsZW5kYXJOYW1lIGluIHJlc3BvbnNlLmRhdGEuaWRDb25Ob21pKSB7CiAgICAgICAgICAgIF90aGlzMi5jYWxlbmRhckxpc3QucHVzaCh7CiAgICAgICAgICAgICAgaWQ6IGNhbGVuZGFyTmFtZSwKICAgICAgICAgICAgICBhY3RpdmU6IGZhbHNlCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzMi5zZWxlY3RlZENhbGVuZGFycyA9IHJlc3BvbnNlLmRhdGEuY2FsZW5kYXJpLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgIGlkOiBpdGVtLmNhbGVuZGFyaW8KICAgICAgICAgICAgfTsKICAgICAgICAgIH0pOwogICAgICAgIH0pWyJmaW5hbGx5Il0oZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKF90aGlzMi5zZWxlY3RlZENhbGVuZGFycyksCiAgICAgICAgICAgICAgX3N0ZXA7CgogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgICB2YXIgc2VsZWN0ZWQgPSBfc3RlcC52YWx1ZTsKCiAgICAgICAgICAgICAgdmFyIF9pdGVyYXRvcjIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihfdGhpczIuY2FsZW5kYXJMaXN0KSwKICAgICAgICAgICAgICAgICAgX3N0ZXAyOwoKICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgZm9yIChfaXRlcmF0b3IyLnMoKTsgIShfc3RlcDIgPSBfaXRlcmF0b3IyLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgICAgICAgdmFyIGNhbGVuZGFyID0gX3N0ZXAyLnZhbHVlOwoKICAgICAgICAgICAgICAgICAgaWYgKHNlbGVjdGVkLmlkID09PSBjYWxlbmRhci5pZCkgewogICAgICAgICAgICAgICAgICAgIGNhbGVuZGFyLmFjdGl2ZSA9IHRydWU7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICAgICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgICAgICBfaXRlcmF0b3IyLmYoKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAicHJvY2Vzc1VzZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHByb2Nlc3NVc2VyKGNvbXBhbnkpIHsKICAgICAgdmFyIHJlc3VsdCA9IHt9OyAvL0ZPUk1BVFRJTkcgCgogICAgICBpZiAoY29tcGFueSkgewogICAgICAgIGNvbXBhbnkuc290dG9zY3JpemlvbmUgPSBjb21wYW55LnNvdHRvc2NyaXppb25lLnJlcGxhY2UoIk1lbW9mbHkiLCAiIik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29tcGFueSA9IHt9OwogICAgICB9CgogICAgICB2YXIgY2FsZW5kYXJTdHJpbmcgPSAiIjsKICAgICAgdGhpcy5jYWxlbmRhckxpbWl0ID0gY29tcGFueS5udW1DYWxlbmRhcmk7CgogICAgICBpZiAoY29tcGFueS5udW1DYWxlbmRhcmkgPD0gMSkgewogICAgICAgIGNhbGVuZGFyU3RyaW5nID0gY29tcGFueS5udW1DYWxlbmRhcmkgKyAiIGNhbGVuZGFyaW8iOwogICAgICB9IGVsc2UgewogICAgICAgIGNhbGVuZGFyU3RyaW5nID0gY29tcGFueS5udW1DYWxlbmRhcmkgKyAiIGNhbGVuZGFyaSI7CiAgICAgIH0KCiAgICAgIHJlc3VsdCA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgY29tcGFueSksIHt9LCB7CiAgICAgICAgY2FsZW5kYXJpOiBjYWxlbmRhclN0cmluZwogICAgICB9KTsKICAgICAgdGhpcy5jb21wYW55ID0gcmVzdWx0OwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICB2YXIgc2VsZWN0ZWRDYWxlbmRhcnMgPSB0aGlzLmNhbGVuZGFyTGlzdC5maWx0ZXIoZnVuY3Rpb24gKGNhbGVuZGFyKSB7CiAgICAgICAgcmV0dXJuIGNhbGVuZGFyLmFjdGl2ZSA9PT0gdHJ1ZTsKICAgICAgfSk7CiAgICAgIHZhciBzZWxlY3RlZE51bWJlciA9IHNlbGVjdGVkQ2FsZW5kYXJzLmxlbmd0aDsKCiAgICAgIGlmIChzZWxlY3RlZE51bWJlciA+IHRoaXMuY2FsZW5kYXJMaW1pdCkgewogICAgICAgIFRvYXN0KHsKICAgICAgICAgIHN0YXR1czogNDAwCiAgICAgICAgfSwgewogICAgICAgICAgc3VjY2VzczogIkNhbGVuZGFyaSBhZ2dpb3JuYXRpIGNvbiBzdWNjZXNzbyIsCiAgICAgICAgICBlcnJvcjogIkhhaSBzZWxlemlvbmF0byAiICsgc2VsZWN0ZWROdW1iZXIgKyAiIGNhbGVuZGFyaSBpbnZlY2UgY2hlICIgKyB0aGlzLmNhbGVuZGFyTGltaXQKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgcHJvbWlzZXMgPSBbXTsKICAgICAgICB2YXIgY2FsZW5kYXJzID0ge307CiAgICAgICAgdmFyIGluZGV4ID0gMTsKCiAgICAgICAgdmFyIF9pdGVyYXRvcjMgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihzZWxlY3RlZENhbGVuZGFycyksCiAgICAgICAgICAgIF9zdGVwMzsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMy5zKCk7ICEoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBjYWxlbmRhciA9IF9zdGVwMy52YWx1ZTsKICAgICAgICAgICAgY2FsZW5kYXJzW2luZGV4XSA9IGNhbGVuZGFyLmlkOwogICAgICAgICAgICBpbmRleCsrOwogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgX2l0ZXJhdG9yMy5lKGVycik7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIF9pdGVyYXRvcjMuZigpOwogICAgICAgIH0KCiAgICAgICAgUFVUQ2FsZW5kYXJzKGNhbGVuZGFycykudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgICB2YXIgZGF0YSA9IHJlc3VsdFswXTsKCiAgICAgICAgICBpZiAoZGF0YSAmJiBkYXRhLmNoYW5nZWRSb3dzKSB7CiAgICAgICAgICAgIFRvYXN0KHsKICAgICAgICAgICAgICBzdGF0dXM6IDIwMAogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgc3VjY2VzczogIkNhbGVuZGFyaSBhZ2dpb3JuYXRpIGNvbiBzdWNjZXNzbyIKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBUb2FzdCh7CiAgICAgICAgICAgICAgc3RhdHVzOiA0MDAKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIGVycm9yOiAiRXJyb3JlIGR1cmFudGUiCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQ2FsZW5kYXJTZXQ7Cn0oVnVlKTsKCkNhbGVuZGFyU2V0ID0gX19kZWNvcmF0ZShbQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7fQp9KV0sIENhbGVuZGFyU2V0KTsKZXhwb3J0IGRlZmF1bHQgQ2FsZW5kYXJTZXQ7"},{"version":3,"sources":["/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/components/CalendarSet.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { GETUser } from \"../memoFly-api/GETUser.js\";\nimport { GETCalendars } from \"../memoFly-api/GETCalendars.js\";\nimport { PUTCalendars } from \"../memoFly-api/PUTCalendars.js\";\n\nimport { Toast } from \"../services/Toast.js\";\n\n@Component({\n    components: {\n    },\n})\n\n\nexport default class CalendarSet extends Vue {\n\n    public services :any;\n    public dataServices :any;\n    public service :any;\n    public coworkers :any;\n    public disabled :any = true;\n    public company: any = [];\n    public calendarList : any = [];\n    public selectedCalendars : any = [];\n    public calendarLimit: number = 0;\n\n    data() {\n        \n        return {\n            company: this.company,\n            calendarList: this.calendarList,\n            calendarLimit: this.calendarLimit,\n            selectedCalendars: this.selectedCalendars,\n        }\n        \n    }\n\n    mounted() {\n\n        this.disabled = true;\n\n        GETUser()\n        .then((response: any) => {\n\n            if (response.status == 200) {\n                this.processUser(response.data);\n            } else {\n                this.company = [];\n            }\n\n        }).finally(()=>{\n\n            GETCalendars()\n                .then((response:any)=>{\n\n                    this.calendarList = [];\n\n                    for(let calendarName in response.data.idConNomi){\n                        this.calendarList.push({id: calendarName, active:false})\n                    }\n\n                    this.selectedCalendars = response.data.calendari.map((item:any)=>{\n                        return {\n                            id: item.calendario\n                        }\n                    });\n\n                })\n                .finally(()=>{\n\n                        for(let selected of this.selectedCalendars){\n                            for(let calendar of this.calendarList){\n\n                                if(selected.id === calendar.id){\n                                    calendar.active = true;\n                                }\n\n                            }\n                        }\n\n                });\n                \n\n        });\n        \n    }\n\n    processUser(company){\n\n        let result = {};\n\n        //FORMATTING \n        if(company){\n        company.sottoscrizione = company.sottoscrizione.replace(\"Memofly\",\"\");\n        }else{\n        company = {};\n        }\n\n        let calendarString = \"\";\n\n        this.calendarLimit = company.numCalendari;\n\n        if(company.numCalendari <=1 ){\n            calendarString = company.numCalendari + \" calendario\";\n        }else{\n            calendarString = company.numCalendari + \" calendari\";\n        }\n\n        result = { \n            ...company,  \n            calendari: calendarString\n        };\n\n        this.company = result;\n\n    }\n\n    update(){\n\n        let selectedCalendars = this.calendarList.filter(calendar => calendar.active === true);\n        let selectedNumber = selectedCalendars.length;\n\n        if(selectedNumber > this.calendarLimit){ \n\n            Toast({status: 400},{success:\"Calendari aggiornati con successo\",error:\"Hai selezionato \"+selectedNumber+\" calendari invece che \"+this.calendarLimit});\n\n        }else{\n            \n            let promises: any = [];\n\n            let calendars: any = {};\n\n            let index = 1;\n\n            for(let calendar of selectedCalendars){\n                calendars[index] = calendar.id;\n                index++;\n            }\n\n            PUTCalendars(calendars).then(result=>{\n\n                let data = result[0];\n\n                if(data && data.changedRows){\n                    Toast({status: 200},{success:\"Calendari aggiornati con successo\"});\n                }else{\n                    Toast({status: 400},{error:\"Errore durante\"});\n                }\n\n            });\n\n\n        }\n\n    }\n            \n\n\n\n\n  \n\n}\n"],"sourceRoot":""}]}