{"remainingRequest":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/components/common/WordCloud.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/components/common/WordCloud.vue","mtime":1631826635085},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1630067776591},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/babel-loader/lib/index.js","mtime":1630067775262},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/ts-loader/index.js","mtime":1630067785662},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1630067776591},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/index.js","mtime":1630067786533}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKaW1wb3J0IHsgQ29tcG9uZW50LCBQcm9wLCBWdWUgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsKCkBDb21wb25lbnQKZXhwb3J0IGRlZmF1bHQgY2xhc3MgV29ybGRDbG91ZCBleHRlbmRzIFZ1ZSB7CgogICAgQFByb3AoKSBwdWJsaWMgd29yZHMhOiBhbnk7CgogICAgcHVibGljIGNodW5rczphbnkgPSBbXTsKICAgIHB1YmxpYyB0cmFjZUNhbnZhc0N0eDphbnk7CiAgICBwdWJsaWMgd29yZHNEb3duOmFueTsKCiAgICBwdWJsaWMgY29uZmlnID0gewogICAgICAgICAgdHJhY2U6IHRydWUsCiAgICAgICAgICBzcGlyYWxSZXNvbHV0aW9uOiAxLAogICAgICAgICAgc3BpcmFsTGltaXQ6IDM2MCAqIDUsCiAgICAgICAgICBsaW5lSGVpZ2h0OiAwLjgsCiAgICAgICAgICB4V29yZFBhZGRpbmc6IDAsCiAgICAgICAgICB5V29yZFBhZGRpbmc6IDMsCiAgICAgICAgICBmb250OiAic2Fucy1zZXJpZiIKICAgICAgfTsKCgogICAgZGF0YSgpewoKICAgICAgaWYoIXRoaXMud29yZHMpewogICAgICAgIHRoaXMud29yZHMgPSAiTmVzc3VuIGRhdG8hIjsKICAgICAgfQogICAgCgogICAgICByZXR1cm57IAogICAgICAgIHdvcmRzOiB0aGlzLndvcmRzLAogICAgICAgIGNodW5rczogdGhpcy5jaHVua3MsCiAgICAgICAgdHJhY2VDYW52YXNDdHg6IHRoaXMudHJhY2VDYW52YXNDdHgsCiAgICAgICAgd29yZHNEb3duOiB0aGlzLndvcmRzRG93biwKICAgICAgfQogICAgfQoKICAgIGluaXQoKXsKCiAgICAgIGlmKHRoaXMud29yZHMpewoKICAgICAgICB0aGlzLmNodW5rcyA9IHRoaXMud29yZHMuc3BsaXQoIiAiKQogICAgICAgIC5tYXAoKHdvcmQ6YW55KT0+IHtyZXR1cm4geyB3b3JkOiB3b3JkLCBmcmVxOihNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1MCkgKyAxMCkgfX0pCiAgICAgICAgLnNvcnQoKGEsIGIpPT4geyByZXR1cm4gLTEgKiAoYS5mcmVxIC0gYi5mcmVxKX0pOwoKICAgICAgICBsZXQgY2xvdWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgid29yZC1jbG91ZCIpIGFzIGFueTsKICAgICAgICAgICAgY2xvdWQuc3R5bGUucG9zaXRpb24gPSAicmVsYXRpdmUiOwogICAgICAgICAgICBjbG91ZC5zdHlsZS5mb250RmFtaWx5ID0gdGhpcy5jb25maWcuZm9udDsKCiAgICAgICAgbGV0IHRyYWNlQ2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7CiAgICAgICAgICAgIHRyYWNlQ2FudmFzLndpZHRoID0gY2xvdWQub2Zmc2V0V2lkdGg7CiAgICAgICAgICAgIHRyYWNlQ2FudmFzLmhlaWdodCA9IGNsb3VkLm9mZnNldEhlaWdodDsKICAgICAgICB0aGlzLnRyYWNlQ2FudmFzQ3R4ID0gdHJhY2VDYW52YXMuZ2V0Q29udGV4dCgiMmQiKTsKICAgICAgICAgICAgY2xvdWQuYXBwZW5kQ2hpbGQodHJhY2VDYW52YXMpOwoKICAgICAgICBjb25zdCBzdGFydFBvaW50ID0gewogICAgICAgICAgICB4OiBjbG91ZC5vZmZzZXRXaWR0aCAvIDIsCiAgICAgICAgICAgIHk6IGNsb3VkLm9mZnNldEhlaWdodCAvIDIKICAgICAgICB9OwoKICAgICAgICB0aGlzLndvcmRzRG93biA9IFtdOwoKICAgICAgICBsZXQgY3JlYXRlV29yZE9iamVjdCA9ICh3b3JkLCBmcmVxKT0+IHsKICAgICAgICAgICAgbGV0IHdvcmRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgICAgICAgICAgICAgIHdvcmRDb250YWluZXIuc3R5bGUucG9zaXRpb24gPSAiYWJzb2x1dGUiOwogICAgICAgICAgICAgICAgd29yZENvbnRhaW5lci5zdHlsZS5mb250U2l6ZSA9IGZyZXEgKyAicHgiOwogICAgICAgICAgICAgICAgd29yZENvbnRhaW5lci5zdHlsZS5saW5lSGVpZ2h0ID0gdGhpcy5jb25maWcubGluZUhlaWdodC50b1N0cmluZygpOwogICAgICAgICAgICAgICAgd29yZENvbnRhaW5lci5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh3b3JkKSk7CgogICAgICAgICAgICByZXR1cm4gd29yZENvbnRhaW5lcjsKICAgICAgICB9CgogICAgICAgIGxldCBwbGFjZVdvcmQgPSAod29yZCwgeCwgeSkgPT4gewoKICAgICAgICAgICAgY2xvdWQuYXBwZW5kQ2hpbGQod29yZCk7CiAgICAgICAgICAgIHdvcmQuc3R5bGUubGVmdCA9IHggLSB3b3JkLm9mZnNldFdpZHRoLzIgKyAicHgiOwogICAgICAgICAgICB3b3JkLnN0eWxlLnRvcCA9IHkgLSB3b3JkLm9mZnNldEhlaWdodC8yICsgInB4IjsKCiAgICAgICAgICAgIHRoaXMud29yZHNEb3duLnB1c2god29yZC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSk7CiAgICAgICAgfQoKICAgICAgICBsZXQgdHJhY2UgPSAoeCwgeSkgPT4gewogICAgICAgICAgICB0aGlzLnRyYWNlQ2FudmFzQ3R4LmZpbGxSZWN0KHgsIHksIDEsIDEpOwogICAgICAgIH0KCiAgICAgICAgbGV0IHNwaXJhbCA9IChpLCBjYWxsYmFjaykgPT57CiAgICAgICAgICAgIGxldCBhbmdsZSA9IHRoaXMuY29uZmlnLnNwaXJhbFJlc29sdXRpb24gKiBpOwogICAgICAgICAgICBsZXQgeCA9ICgxICsgYW5nbGUpICogTWF0aC5jb3MoYW5nbGUpOwogICAgICAgICAgICBsZXQgeSA9ICgxICsgYW5nbGUpICogTWF0aC5zaW4oYW5nbGUpOwogICAgICAgICAgICByZXR1cm4gY2FsbGJhY2sgPyBjYWxsYmFjaygpIDogbnVsbDsKICAgICAgICB9CgogICAgICAgIGxldCBpbnRlcnNlY3QgPSAod29yZCwgeCwgeSkgPT4gewogICAgICAgICAgICBjbG91ZC5hcHBlbmRDaGlsZCh3b3JkKTsgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICB3b3JkLnN0eWxlLmxlZnQgPSB4IC0gd29yZC5vZmZzZXRXaWR0aC8yICsgInB4IjsKICAgICAgICAgICAgd29yZC5zdHlsZS50b3AgPSB5IC0gd29yZC5vZmZzZXRIZWlnaHQvMiArICJweCI7CiAgICAgICAgICAgIAogICAgICAgICAgICB2YXIgY3VycmVudFdvcmQgPSB3b3JkLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwogICAgICAgICAgICAKICAgICAgICAgICAgY2xvdWQucmVtb3ZlQ2hpbGQod29yZCk7CiAgICAgICAgICAgIAogICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy53b3Jkc0Rvd24ubGVuZ3RoOyBpKz0xKXsKICAgICAgICAgICAgICAgIGxldCBjb21wYXJpc29uV29yZDphbnk9IHRoaXMud29yZHNEb3duW2ldOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZighKGN1cnJlbnRXb3JkLnJpZ2h0ICsgdGhpcy5jb25maWcueFdvcmRQYWRkaW5nIDwgY29tcGFyaXNvbldvcmQubGVmdCAtIHRoaXMuY29uZmlnLnhXb3JkUGFkZGluZyB8fAogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRXb3JkLmxlZnQgLSB0aGlzLmNvbmZpZy54V29yZFBhZGRpbmcgPiBjb21wYXJpc29uV29yZC5yaWdodCArIHRoaXMuY29uZmlnLnhXb3JkUGFkZGluZyB8fAogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRXb3JkLmJvdHRvbSArIHRoaXMuY29uZmlnLnlXb3JkUGFkZGluZyA8IGNvbXBhcmlzb25Xb3JkLnRvcCAtIHRoaXMuY29uZmlnLnlXb3JkUGFkZGluZyB8fAogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRXb3JkLnRvcCAtIHRoaXMuY29uZmlnLnlXb3JkUGFkZGluZyA+IGNvbXBhcmlzb25Xb3JkLmJvdHRvbSArIHRoaXMuY29uZmlnLnlXb3JkUGFkZGluZykpewogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBsZXQgcGxhY2VXb3JkcyA9ICgpID0+IHsKICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLndvcmRzLmxlbmd0aDsgaSArPSAxKSB7CgogICAgICAgICAgICAgICAgbGV0IHdvcmQgPSBjcmVhdGVXb3JkT2JqZWN0KHRoaXMud29yZHNbaV0ud29yZCwgdGhpcy53b3Jkc1tpXS5mcmVxKTsKICAgICAgICAgICAgICAgIGxldCB4LHkgPSAwOwoKICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5jb25maWcuc3BpcmFsTGltaXQ7IGorKykgewogICAgICAgICAgICAgICAgICAgIGlmIChzcGlyYWwoaiwgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWludGVyc2VjdCh3b3JkLCBzdGFydFBvaW50LnggKyB4LCBzdGFydFBvaW50LnkgKyB5KSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlV29yZCh3b3JkLCBzdGFydFBvaW50LnggKyB4LCBzdGFydFBvaW50LnkgKyB5KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfTsKCiAgICAgICAgbGV0IHRyYWNlU3BpcmFsID0gKCk9PiB7CiAgICAKICAgICAgICAgICAgdGhpcy50cmFjZUNhbnZhc0N0eC5iZWdpblBhdGgoKTsKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmICh0aGlzLmNvbmZpZy50cmFjZSkgewogICAgICAgICAgICAgICAgbGV0IGZyYW1lID0gMTsKCiAgICAgICAgICAgICAgICBsZXQgeCx5ID0gMDsKCiAgICAgICAgICAgICAgICBsZXQgYW5pbWF0ZSA9ICgpPT4gewogICAgICAgICAgICAgICAgICAgIHNwaXJhbChmcmFtZSwgKCk9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRyYWNlKHN0YXJ0UG9pbnQueCArIHgsIHN0YXJ0UG9pbnQueSArIHkpOwogICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICBmcmFtZSArPSAxOwoKICAgICAgICAgICAgICAgICAgICBpZiAoZnJhbWUgPCB0aGlzLmNvbmZpZy5zcGlyYWxMaW1pdCkgewogICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBhbmltYXRlKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwoKCiAgICAgICAgICBwbGFjZVdvcmRzKCk7CiAgICAgICAgICB0cmFjZVNwaXJhbCgpOwoKICAgICAgfQoKCiAgICB9CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgogICAgCgoKfQo="},{"version":3,"sources":["WordCloud.vue"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA","file":"WordCloud.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n\n    <div class=\"w-100\">                                            \n       <div id=\"word-cloud\"></div>\n    </div>\n  \n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator';\n\n@Component\nexport default class WorldCloud extends Vue {\n\n    @Prop() public words!: any;\n\n    public chunks:any = [];\n    public traceCanvasCtx:any;\n    public wordsDown:any;\n\n    public config = {\n          trace: true,\n          spiralResolution: 1,\n          spiralLimit: 360 * 5,\n          lineHeight: 0.8,\n          xWordPadding: 0,\n          yWordPadding: 3,\n          font: \"sans-serif\"\n      };\n\n\n    data(){\n\n      if(!this.words){\n        this.words = \"Nessun dato!\";\n      }\n    \n\n      return{ \n        words: this.words,\n        chunks: this.chunks,\n        traceCanvasCtx: this.traceCanvasCtx,\n        wordsDown: this.wordsDown,\n      }\n    }\n\n    init(){\n\n      if(this.words){\n\n        this.chunks = this.words.split(\" \")\n        .map((word:any)=> {return { word: word, freq:(Math.floor(Math.random() * 50) + 10) }})\n        .sort((a, b)=> { return -1 * (a.freq - b.freq)});\n\n        let cloud = document.getElementById(\"word-cloud\") as any;\n            cloud.style.position = \"relative\";\n            cloud.style.fontFamily = this.config.font;\n\n        let traceCanvas = document.createElement(\"canvas\");\n            traceCanvas.width = cloud.offsetWidth;\n            traceCanvas.height = cloud.offsetHeight;\n        this.traceCanvasCtx = traceCanvas.getContext(\"2d\");\n            cloud.appendChild(traceCanvas);\n\n        const startPoint = {\n            x: cloud.offsetWidth / 2,\n            y: cloud.offsetHeight / 2\n        };\n\n        this.wordsDown = [];\n\n        let createWordObject = (word, freq)=> {\n            let wordContainer = document.createElement(\"div\");\n                wordContainer.style.position = \"absolute\";\n                wordContainer.style.fontSize = freq + \"px\";\n                wordContainer.style.lineHeight = this.config.lineHeight.toString();\n                wordContainer.appendChild(document.createTextNode(word));\n\n            return wordContainer;\n        }\n\n        let placeWord = (word, x, y) => {\n\n            cloud.appendChild(word);\n            word.style.left = x - word.offsetWidth/2 + \"px\";\n            word.style.top = y - word.offsetHeight/2 + \"px\";\n\n            this.wordsDown.push(word.getBoundingClientRect());\n        }\n\n        let trace = (x, y) => {\n            this.traceCanvasCtx.fillRect(x, y, 1, 1);\n        }\n\n        let spiral = (i, callback) =>{\n            let angle = this.config.spiralResolution * i;\n            let x = (1 + angle) * Math.cos(angle);\n            let y = (1 + angle) * Math.sin(angle);\n            return callback ? callback() : null;\n        }\n\n        let intersect = (word, x, y) => {\n            cloud.appendChild(word);    \n            \n            word.style.left = x - word.offsetWidth/2 + \"px\";\n            word.style.top = y - word.offsetHeight/2 + \"px\";\n            \n            var currentWord = word.getBoundingClientRect();\n            \n            cloud.removeChild(word);\n            \n            for(var i = 0; i < this.wordsDown.length; i+=1){\n                let comparisonWord:any= this.wordsDown[i];\n                \n                if(!(currentWord.right + this.config.xWordPadding < comparisonWord.left - this.config.xWordPadding ||\n                    currentWord.left - this.config.xWordPadding > comparisonWord.right + this.config.xWordPadding ||\n                    currentWord.bottom + this.config.yWordPadding < comparisonWord.top - this.config.yWordPadding ||\n                    currentWord.top - this.config.yWordPadding > comparisonWord.bottom + this.config.yWordPadding)){\n                    return true;\n                }\n            }\n            \n            return false;\n        }\n\n        let placeWords = () => {\n            for (var i = 0; i < this.words.length; i += 1) {\n\n                let word = createWordObject(this.words[i].word, this.words[i].freq);\n                let x,y = 0;\n\n                for (var j = 0; j < this.config.spiralLimit; j++) {\n                    if (spiral(j, function() {\n                            if (!intersect(word, startPoint.x + x, startPoint.y + y)) {\n                                placeWord(word, startPoint.x + x, startPoint.y + y);\n                                return true;\n                            }\n                        })) {\n                        break;\n                    }\n                }\n            }\n        };\n\n        let traceSpiral = ()=> {\n    \n            this.traceCanvasCtx.beginPath();\n            \n            if (this.config.trace) {\n                let frame = 1;\n\n                let x,y = 0;\n\n                let animate = ()=> {\n                    spiral(frame, ()=> {\n                        trace(startPoint.x + x, startPoint.y + y);\n                    });\n\n                    frame += 1;\n\n                    if (frame < this.config.spiralLimit) {\n                        window.requestAnimationFrame(animate);\n                    }\n                }\n\n                animate();\n            }\n        };\n\n\n          placeWords();\n          traceSpiral();\n\n      }\n\n\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n\n    #word-cloud{\n      height: 100vh;\n      width: 100vw;\n      margin: 0 auto;\n    }\n\n</style>\n"]}]}