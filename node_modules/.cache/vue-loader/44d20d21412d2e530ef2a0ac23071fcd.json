{"remainingRequest":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/components/AppointmentsTable.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/components/AppointmentsTable.vue","mtime":1627419836776},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/css-loader/dist/cjs.js","mtime":1632248234513},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1632248240771},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/postcss-loader/src/index.js","mtime":1632248237643},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/sass-loader/dist/cjs.js","mtime":1632248239482},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1632248233346},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/index.js","mtime":1632248240770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZmMtY29sLWhlYWRlciwKLmZjLWRheXsKICAgIGJhY2tncm91bmQtY29sb3I6ICNGMUY1RkE7Cn0KCmEuZmMtY29sLWhlYWRlci1jZWxsLWN1c2hpb257CiAgICBoZWlnaHQ6IDQwcHggIWltcG9ydGFudDsKICAgIGxpbmUtaGVpZ2h0OjQwcHg7Cn0KCg=="},{"version":3,"sources":["AppointmentsTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuNA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"AppointmentsTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n  <div class=\"row\">\n\n        <div class=\"col-12\">\n          <div class=\"card\">\n              <div class=\"card-body\">\n                  <h4 class=\"header-title mt-0 mb-3\"></h4>\n                  <FullCalendar v-bind:options=\"calendarOptions\" v-bind:events=\"events\"/>\n              </div>\n          </div>\n        </div>\n\n      <div class=\"col-12\">\n          <div class=\"card\">\n              <div class=\"card-body\">\n                  <h4 class=\"header-title mt-0 mb-3\"></h4>\n                  <div class=\"table-responsive browser_users\">\n                      <table class=\"table mb-0\">\n                          <thead class=\"thead-light\">\n                              <tr>\n                                  <th class=\"border-top-0\">Appuntamento</th>\n                                  <th class=\"border-top-0\">Ora</th>\n                                  <th class=\"border-top-0\">Durata</th>\n                                  <th class=\"border-top-0\">Collaboratore</th>\n                                  <th class=\"border-top-0\">Cliente</th>\n                                  <th class=\"border-top-0\">Numero di telefono</th>\n                                  <th class=\"border-top-0\">Prenotabile via web</th>\n                                  <th></th>\n                              </tr>\n                          </thead>\n                          <tbody>\n                             <tr v-for=\"appointment in dataAppointments\" :key=\"appointment\">   \n                                  <td><i class=\"mdi mdi-circle-slice-8 mr-2 text-warning font-16\"></i>{{ appointment.servizio }}</td>\n                                  <td>{{ appointment.ora }}</td>  \n                                  <td>{{ appointment.durata }}</td>   \n                                  <td>{{ appointment.collaboratore }}</td>                          \n                                  <td>{{ appointment.cliente.fullName }}</td> \n                                  <td>{{ appointment.cliente.phone }}</td>   \n\n                                  <td v-if=\"appointment.prenotabileViaWeb=='on'\" class=\"text-center\"><i class=\"mdi mdi-check-circle text-success font-22\"></i></td>   \n                                  <td v-if=\"appointment.prenotabileViaWeb!=='on'\" class=\"text-center\" ><i class=\"mdi mdi-close-circle text-danger font-22\"></i></td>                                   \n                                  <td name=\"buttons\" class=\"p-0\">\n                                      <div class=\"col-12 m-0\">\n                                          <button id=\"bEdit\" type=\"button\" class=\"btn btn-sm btn-soft-success btn-circle col-6\">\n                                                <router-link :to=\"{ name: 'Service', params: { id: appointment.id } }\">\n                                                    <i class=\"dripicons-pencil text-success\"></i>\n                                                </router-link>\n                                          </button>\n                                          <button id=\"bElim\" type=\"button\" class=\"btn btn-sm btn-soft-danger btn-circle col-6\" onclick=\"rowElim(this);\">\n                                              <i class=\"dripicons-trash\" aria-hidden=\"true\"></i>\n                                          </button>\n                                      </div>\n                                  </td>\n                              </tr>\n                              \n                          </tbody>\n                      </table>   \n\n                    <Pagination  offset=\"10\" />\n\n                  </div><!--end /div-->\n              </div><!--end card-body-->\n          </div><!--end card-->\n      </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport FullCalendar from '@fullcalendar/vue';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport itLocale from \"@fullcalendar/core/locales/it\";\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { GETAppointments } from \"../memoFly-api/GETAppointments.js\";\nimport Pagination from './common/Pagination.vue';\nimport moment from 'moment';\nimport { Toast } from \"../services/Toast.js\";\n\n\n@Component({\n  components: {\n    Pagination,\n    FullCalendar\n  },\n})\n\nexport default class AppointmentsTable extends Vue {\n  \n    public appointments :any;\n    public dataAppointments :any;\n    public calendarOptions :any;\n    public events :any;\n\n    process(appointments:any){\n\n        return appointments.map((appointment:any)=>{\n\n                let cliente = {\n                    fulname:\"\",\n                    phone:\"\"\n                };\n\n                if(appointment.cliente.name){\n                    cliente.fulname = appointment.cliente.name + \" \"+ appointment.cliente.lastname;\n                    cliente.phone = appointment.cliente.phone;\n                }else{ \n                    cliente.fulname = appointment.cliente;\n                }\n\n                let ora = moment(appointment.inizio).format(\"hh:mm\");\n\n                return { \n\n                    id: appointment.id,\n                    servizio: appointment.servizio,\n                    ora: ora,\n                    start: appointment.inizio,\n                    durata: null,\n                    collaboratore: null,\n                    cliente: cliente,\n                    prenotatoViaWeb: appointment.prenotatoViaWeb\n\n                }\n\n        })\n        \n    }\n\n    calendarEvents(appointments:any){\n\n        return appointments.map((appointment:any)=>{\n\n            let title = appointment.servizio;\n\n            if(appointment.cliente.name){\n                    title += \" - \" + appointment.cliente.name + \" \"+ appointment.cliente.lastname;\n            }else{ \n                title +=  appointment.cliente;\n            }\n\n            return { \n                title: title, \n                start:appointment.inizio\n            }\n\n        });\n\n    }\n\n    data() {\n\n         GETAppointments()\n            .then((appointmentsData:any)=>{\n                this.events = this.calendarEvents(appointmentsData);\n                this.calendarOptions.events = this.events;\n                console.log(\"EVENTS\")\n                console.log(JSON.stringify(this.events));\n                this.appointments = this.process(appointmentsData);\n                this.$root.$emit('dataApi',this.appointments);\n                return this.appointments\n         })\n\n        //dayGridWeek', 'timeGridDay', 'listWeek' \n\n        this.calendarOptions = {\n            plugins: [ timeGridPlugin, dayGridPlugin, interactionPlugin ],\n            locale:itLocale,\n            initialView: 'timeGridDay',\n            dateClick: this.handleDateClick,\n            slotMinTime: \"09:00:00\",\n            slotMaxTime: \"19:00:00\",\n            eventTimeFormat: {\n                hour: 'numeric',\n                minute: '2-digit',\n                hour12: false\n            },\n            slotLabelFormat: {\n                hour: '2-digit',\n                minute: '2-digit',\n                meridiem: false,\n                hour12: false \n            },\n            events: this.events\n        },\n\n\n        this.$root.$on('dataOutput', (data:any) => {\n            this.dataAppointments = data;\n        });\n        \n        return {\n            calendarOptions: this.calendarOptions,\n            events: this.events,\n            appointments: this.appointments,\n            dataAppointments:this.dataAppointments\n        }\n\n        \n        \n    }\n    \n\n    handleDateClick(arg:any) {\n        alert('date click! ' + JSON.stringify(arg))\n    }\n\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\">\n\n    .fc-col-header,\n    .fc-day{\n        background-color: #F1F5FA;\n    }\n\n    a.fc-col-header-cell-cushion{\n        height: 40px !important;\n        line-height:40px;\n    }\n\n</style>\n"]}]}