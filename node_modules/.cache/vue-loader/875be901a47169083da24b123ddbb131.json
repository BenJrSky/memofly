{"remainingRequest":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/components/common/Dialog.vue?vue&type=style&index=0&id=56b6902c&scoped=true&lang=scss&","dependencies":[{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/components/common/Dialog.vue","mtime":1626294294912},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/css-loader/dist/cjs.js","mtime":1632248234513},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1632248240771},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/postcss-loader/src/index.js","mtime":1632248237643},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/sass-loader/dist/cjs.js","mtime":1632248239482},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1632248233346},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/index.js","mtime":1632248240770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRpYWxvZ3sKICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgIHRvcDogMDsKICAgIGxlZnQ6IDA7CiAgICB6LWluZGV4OiA5OTk5OwogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgb3V0bGluZTogMDsKICAgIGJhY2tncm91bmQ6IHJnYigxMjggMTI4IDEyOCAvIDcwJSk7CiAgfQoKICAuZGlhbG9nLW9wZW57CiAgICBkaXNwbGF5OiBibG9jazsKICB9CgogIC5kaWFsb2ctY2xvc2V7CiAgICBkaXNwbGF5OiBub25lOwogIH0KCgogIC5tb2RhbC1kaWFsb2d7CiAgICB0b3A6MjUlOwogIH0KCg=="},{"version":3,"sources":["Dialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA","file":"Dialog.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n\n    <div class=\"dialog right\" v-bind:class=\"dialog.statusClass\" id=\"modalAbandonedCart\" tabindex=\"1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\n      aria-hidden=\"true\" data-backdrop=\"false\">\n      <div class=\"modal-dialog modal-side modal-bottom-right modal-notify modal-info\" role=\"document\">\n        <!--Content-->\n        <div class=\"modal-content\">\n          <!--Header-->\n          <div class=\"modal-header\">\n            <h5 class=\"heading\">{{dialog.title}}</h5>\n\n            <button type=\"button\" class=\"close align-self-center\" data-dismiss=\"modal\" aria-label=\"Close\" v-on:click=\"cancel()\">\n              <span aria-hidden=\"true\" class=\"white-text text-danger\">&times;</span>\n            </button>\n          </div>\n\n          <!--Body-->\n          <div class=\"modal-body\">\n\n            <div class=\"row\">\n              <div class=\"col-3\">\n                <p></p>\n                <p class=\"text-center\"><i class=\"fa-4x\" v-bind:class=\"dialog.icon\"></i></p>\n              </div>\n\n              <div class=\"col-9\">\n                {{dialog.message}}\n              </div>\n            </div>\n            \n          </div>\n\n          <!--Footer-->\n          <div class=\"modal-footer justify-content-center col-12\">\n            <div class=\"col-2\"></div>\n            <a type=\"button\" class=\"col-3 btn btn-primary text-white\" v-on:click=\"confirm()\">{{dialog.confirm}}</a>\n            <div class=\"col-2\"></div>\n            <a type=\"button\" class=\"col-3 btn btn-danger text-white waves-effect\" data-dismiss=\"modal\" v-on:click=\"cancel()\">{{dialog.cancel}}</a>\n            <div class=\"col-2\"></div>\n          </div>\n        </div>\n        <!--/.Content-->\n      </div>\n    </div>\n\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator';\n\n@Component\nexport default class Dialog extends Vue {\n    public type!: string;\n    public statusClass!: string;\n    public dialog: any;\n\n    data(){\n\n        this.init();\n        this.listener();\n        \n        return { \n          type: this.type,\n          statusClass: this.statusClass,\n          dialog: this.dialog,\n        }\n\n    }\n    \n    init(){\n\n        this.dialog = {\n          status: \"\",\n          type:\"\",\n          statusClass: \"close\",\n          icon: \"\",\n          title: \"Azione necessaria\",\n          message: \"Confermi l'azione?\",\n          confirm: \"conferma\", \n          cancel: \"annulla\", \n        }\n\n        this.set();\n\n    }\n\n    set(){\n\n        switch(this.dialog.type){\n            case \"info\":\n              this.dialog.icon = \"fas fa fa-info text-info\";\n            break;\n            case \"warning\":\n              this.dialog.icon = \"fa fa-exclamation text-warning\";\n            break;\n            case \"danger\":\n              this.dialog.icon = \"fa fa-times text-danger\";\n            break;\n            case \"success\":\n              this.dialog.icon = \"fa fa-check text-success\";\n            break;\n            default:\n              this.dialog.icon = \"fa fa-cloud text-secondary\"\n        }\n\n        switch(this.dialog.status){\n          case \"open\":\n            this.dialog.statusClass = \"dialog-open\";\n          break;\n          case \"close\":\n            this.dialog.statusClass = \"dialog-close\";\n          break;\n          default:\n            this.dialog.statusClass = \"dialog-close\";\n        }\n\n\n    }\n\n    listener(){\n\n         this.$root.$on('dataDialog', (options:any) => {\n\n          if(options.status){\n             this.dialog.status = options.status;\n          }\n\n          if(options.title){\n             this.dialog.title = options.title;\n          }\n\n          if(options.message){\n             this.dialog.message = options.message;\n          }\n\n          if(options.type){\n             this.dialog.type = options.type;\n          }\n\n\n           this.set();\n\n         })\n\n    }\n\n    confirm(){\n      this.dialog.status = \"close\";\n      this.set();\n      this.$root.$emit('dialogResponse',true);\n      this.$root.$off('dialogResponse');\n      this.$root.$off('dialogData');\n    }\n\n    cancel(){\n      this.dialog.status = \"close\";\n      this.set();\n      this.$root.$emit('dialogResponse',false);\n      this.$root.$off('dialogResponse');\n      this.$root.$off('dialogData');\n    }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n\n.dialog{\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 9999;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    outline: 0;\n    background: rgb(128 128 128 / 70%);\n  }\n\n  .dialog-open{\n    display: block;\n  }\n\n  .dialog-close{\n    display: none;\n  }\n\n\n  .modal-dialog{\n    top:25%;\n  }\n\n</style>\n"]}]}