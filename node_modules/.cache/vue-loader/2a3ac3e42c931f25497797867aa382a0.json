{"remainingRequest":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/components/common/Carousel.vue?vue&type=style&index=0&id=11694544&scoped=true&lang=scss&","dependencies":[{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/components/common/Carousel.vue","mtime":1630356691252},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/css-loader/dist/cjs.js","mtime":1630067778183},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1630067786534},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/postcss-loader/src/index.js","mtime":1630067782236},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/sass-loader/dist/cjs.js","mtime":1630067784914},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1630067776591},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/index.js","mtime":1630067786533}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jYXJvdXNlbC13cmFwcGVyIHsKICBvdmVyZmxvdzogaGlkZGVuOwogIHdpZHRoOiA5MCU7CiAgbWFyZ2luOiAwcHg7Cn0KCi5zaG93SXRlbXsKICBkaXNwbGF5OiBibG9jazsKfQoKLmhpZGVJdGVtewogIGRpc3BsYXk6IG5vbmU7Cn0KCi5uZXh0UHJldkRpbWVuc2lvbnsKICBoZWlnaHQ6IDMuM3JlbTsKICB3aWR0aDogIDMuM3JlbTsKICBmb250LXdlaWdodDogYm9sZGVyOwogIGJhY2tncm91bmQtY29sb3I6ICNGMUY1RkE7Cn0KCgoK"},{"version":3,"sources":["Carousel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Carousel.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n  <div class=\"w-100\">\n    <div v-if=\"items.length==0\" class=\"col-11 mx-auto\">\n      <Badge class=\"mx-auto\" message=\"Non hai appuntamenti oggi\"></Badge>\n    </div>\n    <div class=\"w-100 carousel-wrapper m-3\">\n      <div v-if=\"items.length>0\">\n        <div class=\"w-100 carousel\">\n\n          <div  v-bind:class=\"item.class\" v-for=\"item in items\" v-bind:key=\"item\" >\n\n              <div class=\"w-100\">\n                <div class=\"row\">\n                  <div class=\"col-5 offset-7\">\n                    <div class=\"row col-12\">\n                      <div class=\"mx-auto \">\n                          <a class=\"carousel-control-prev mt-1  nextPrevDimension\" role=\"button\" v-on:click=\"prevItem(item)\">\n                            <span class=\"carousel-control-prev-icon float-right bold mr-n4\" ></span>\n                          </a>\n                          <a class=\"carousel-control-next mt-1 nextPrevDimension\" role=\"button\" v-on:click=\"nextItem(item)\">\n                            <span class=\"carousel-control-next-icon mr-n3\" ></span>\n                          </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <h4 class=\"text-primary font-roboto weight-700 size-18\">{{ item.name }}</h4>\n                  </div>\n                </div>\n                <div class=\"w-100\">\n                  <hr>\n                  <div class=\"mt-5 \">\n                    <h5 class=\"font-roboto weight-700 size-18 mb-5\">{{ item.service }}</h5>\n                    <p class=\"font-roboto weight-400 size-18 mb-5\">Cliente {{ item.client }}</p>\n                    <p class=\" text-muted font-roboto weight-400 size-18 mb-5\">Dalle {{ item.start }} alle {{ item.end }}</p>\n                  </div>\n                </div>\n                \n              </div>\n\n          </div>\n\n          <div class=\"carousel__button--next\" v-on:click=\"moveNext()\"></div>\n          <div class=\"carousel__button--prev \" v-on:click=\"movePrev()\"></div>\n\n        </div>\n        <div class=\"w-100 bg-white sticky-bottom p-4\">\n\n          <div class=\"row bg-light p-2 m-2\">\n            <div class=\"d-flex col-3 offset-1\">\n              <h1 class=\"align-self-center text-align-center font-roboto weight-700 size-36\">{{ totalToday}}</h1>\n            </div>\n            <div class=\"col-8\">\n                <h4 class=\"font-roboto weight-700 size-18 mb-0\">APPUNTAMENTI</h4>\n                <p class=\"text-muted font-roboto weight-400 size-18\">Settimana scorsa: {{ totalLastWeek }}</p>\n            </div>\n          </div>\n          \n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n\n    import { Component, Prop, Vue } from 'vue-property-decorator';\n    import Badge from '../common/Badge.vue';\n    import { GETCountAppointments } from \"../../memoFly-api/dashboard/GETCountAppointmnets\";\n    import moment from 'moment';\n\n    @Component({\n      components: {\n        Badge,\n      },\n    })\n\n    export default class Carousel extends Vue {\n\n      @Prop() public items!: any [];\n\n      public current:any = 0;\n      public totalToday:any = 0;\n      public totalLastWeek:any = 0;\n\n      data(){\n\n        this.items = [];\n\n        this.init();  \n\n        return {\n          current: this.current,\n          items: this.items,\n          totalToday: this.totalToday,\n          totalLastWeek: this.totalLastWeek\n        }\n\n      }\n\n      init(){\n\n         GETCountAppointments()\n            .then((dataAppointments:any)=>{\n                if(dataAppointments.data){\n\n                    let todayList = dataAppointments.data.appuntamenti;\n                    let counting = dataAppointments.data.conteggioAppuntamenti;\n\n                    this.totalToday = counting.oggi;\n                    this.totalLastWeek = counting.settimanaScorsa;\n\n                    this.items = todayList.map((elm:any, index:number) =>{\n\n                        elm.start?elm.start = moment(elm.start).format(\"HH:MM\"):elm.start=\"\";\n                        elm.end?elm.end = moment(elm.end).format(\"HH:MM\"):elm.end=\"\";\n\n                        let carouselClass = \"carousel__item hideItem\";\n\n                            index==0?carouselClass=\"carousel__item showItem\":null\n\n                        return { \n                            id: elm.id,\n                            index: index+1,\n                            name:elm.nome,\n                            service: elm.servizio,\n                            client: elm.client,\n                            start: elm.start,\n                            end: elm.end,\n                            class: carouselClass,\n                        }\n\n                    });               \n\n\n                }\n            })\n      }\n\n\n      prevItem(item:any){\n\n        if(this.items.length){\n\n            let currentIndex = this.items.indexOf(item);\n            let prevIndex = 0;\n\n            if(currentIndex == 0){\n              prevIndex = this.items.length - 1;\n            }else{\n              prevIndex =  (currentIndex - 1) % this.items.length;\n            }\n\n\n            this.current = prevIndex;\n\n            for(let index = 0; index < this.items.length; index++){\n\n                if(index==prevIndex){\n                  this.items[index].class = \"showItem\";\n                }else{\n                  this.items[index].class = \"hideItem\";\n                }\n\n            }\n\n        }\n\n      }\n\n      nextItem(item:any){\n\n        if(this.items.length){\n\n            let currentIndex = this.items.indexOf(item);\n            let nextIndex = (currentIndex + 1) % this.items.length;\n\n            this.current = nextIndex;\n\n\n            for(let index = 0; index < this.items.length; index++){\n\n                if(index==nextIndex){\n                  this.items[index].class = \"showItem\";\n                }else{\n                  this.items[index].class = \"hideItem\";\n                }\n\n            }\n\n        }\n\n      }\n\n\n\n\n    }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n\n  .carousel-wrapper {\n    overflow: hidden;\n    width: 90%;\n    margin: 0px;\n  }\n\n  .showItem{\n    display: block;\n  }\n\n  .hideItem{\n    display: none;\n  }\n\n  .nextPrevDimension{\n    height: 3.3rem;\n    width:  3.3rem;\n    font-weight: bolder;\n    background-color: #F1F5FA;\n  }\n\n\n\n</style>\n"]}]}