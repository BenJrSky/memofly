{"remainingRequest":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/components/charts/MessagesPerYearChart.vue?vue&type=style&index=0&id=3cd01b2a&scoped=true&lang=scss&","dependencies":[{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/src/components/charts/MessagesPerYearChart.vue","mtime":1632248241617},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/css-loader/dist/cjs.js","mtime":1632248234513},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1632248240771},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/postcss-loader/src/index.js","mtime":1632248237643},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/sass-loader/dist/cjs.js","mtime":1632248239482},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1632248233346},{"path":"/Users/ben/Desktop/BEN/WORKS/FLYIP/VUE/node_modules/vue-loader/lib/index.js","mtime":1632248240770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhpZGVCb3ggLmFwZXhjaGFydHMtdG9vbGJhcnsKICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7Cn0KLmhpZGVCb3ggLmFwZXhjaGFydHMtZGF0YS1sYWJlbHN7CiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50Owp9Cgo="},{"version":3,"sources":["MessagesPerYearChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8QA;AACA;AACA;AACA;AACA;AACA","file":"MessagesPerYearChart.vue","sourceRoot":"src/components/charts","sourcesContent":["<template>\n      <div class=\"flexCol card report-card\">\n          <div class=\"card-body\">\n              <div class=\"row\">\n                  <div class=\"d-flex col-8\">\n                    <h4 class=\"titolo-label mt-3 align-self-center mt-2 weight-700 size-16 font-poppins\">Messaggi</h4>\n                  </div>\n                  <div class=\"col-4\">\n                    <div class=\"float-right mt-0\">\n                      <ol class=\"breadcrumb\">\n                          <li class=\"breadcrumb-item\" v-bind:class=\"{active: monthActive}\" v-on:click=\"choice('month')\">\n                            <span>Mese</span>\n                          </li>\n                          <li class=\"breadcrumb-item\" v-bind:class=\"{active: yearActive}\" v-on:click=\"choice('year')\">\n                            <span>Anno</span>\n                          </li>\n                      </ol>\n                  </div>   \n                  </div>\n                </div>                            \n              <div class=\"w-100 justify-content-center bg-bg-soft-danger\">\n                  <VueApexCharts height=\"300\" v-bind:options=\"chartOptions\" v-bind:series=\"series\"/>\n              </div>\n          </div>\n      </div>\n</template>\n\n<script lang=\"ts\">\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport VueApexCharts from \"vue-apexcharts\";\nimport { GETMessagesMonth } from './../../memoFly-api/dashboard/GETMessagesMonth.js'\n\n@Component({\n  components: {\n    VueApexCharts,\n  },\n})\n\nexport default class MessagesPerYearChart extends Vue {\n  \n\n    public monthSeries:any = [];\n    public yearSeries:any = [];\n\n    public monthCategories:any = [];\n    public yearCategories:any = [];\n\n    public series:any = [];\n    public categories:any = [];\n\n    public monthActive:any;\n    public yearActive:any;\n\n    public chartOptions:any = {};\n\n    choice(step:any){\n\n      switch(step){\n        case \"month\":\n          this.series = [{name:this.monthCategories,data:this.monthSeries}]\n          this.categories = this.monthCategories;\n          this.monthActive = true;\n          this.yearActive = false;\n          this.chartOptions = {\n            chart: {\n              type: 'line',\n            },\n            stroke: {\n              width: 3,\n              curve: 'smooth'\n            },\n            xaxis: {\n              categories: this.monthCategories,\n            },\n            markers: {\n              size: 4,\n              colors: [\"#FFA41B\"],\n              strokeColors: \"#fff\",\n              strokeWidth: 2,\n              hover: {\n                size: 7,\n              }\n            },\n            yaxis: {\n              min: 0,\n              title: {\n                text: '',\n              },\n            }\n          };\n\n        break;\n        case \"year\":\n          this.series = [{name:this.yearCategories,data:this.yearSeries}]\n          this.categories = this.yearCategories;\n          this.monthActive = false;\n          this.yearActive = true;\n          this.chartOptions = {\n            chart: {\n              type: 'line',\n            },\n            stroke: {\n              width: 3,\n              curve: 'smooth'\n            },\n            xaxis: {\n              categories: this.yearCategories,\n            },\n            markers: {\n              size: 4,\n              colors: [\"#FFA41B\"],\n              strokeColors: \"#fff\",\n              strokeWidth: 2,\n              hover: {\n                size: 7,\n              }\n            },\n            yaxis: {\n              min: 0,\n              title: {\n                text: '',\n              },\n            }\n          };\n        break;\n        default: \n          this.series = [{name:this.monthCategories,data:this.monthSeries}]\n          this.categories = [\"test\", \"test\"];\n          this.monthActive = true;\n          this.yearActive = false;\n          this.chartOptions = {\n            chart: {\n              type: 'line',\n              toolbar: {\n                show: false,\n              }\n            },\n            stroke: {\n              width: 3,\n              curve: 'smooth'\n            },\n            xaxis: {\n              categories: this.monthCategories,\n            },\n            markers: {\n              size: 4,\n              colors: [\"#FFA41B\"],\n              strokeColors: \"#fff\",\n              strokeWidth: 2,\n              hover: {\n                size: 7,\n              }\n            },\n            yaxis: {\n              min: 0,\n              title: {\n                text: '',\n              },\n            }\n          };\n      }\n\n    }\n\n    data() {\n\n      this.init();\n\n      return {\n        monthActive: this.monthActive,\n        yearActive: this.yearActive,\n        series: this.series,\n        categories: this.categories,\n        chartOptions: this.chartOptions,\n        monthSeries: this.monthSeries,\n        monthCategories: this.monthCategories,\n        yearSeries: this.yearSeries,\n        yearCategories: this.yearCategories \n        \n      }\n\n    }\n\n    init(){\n\n      this.chartOptions = {\n                  chart: {\n                    type: 'line',\n                  },\n                  stroke: {\n                    width: 3,\n                    curve: 'smooth'\n                  },\n                  xaxis: {\n                  categories: [],\n                  },\n                  markers: {\n                    size: 1,\n                    colors: [\"#FFA41B\"],\n                    strokeColors: \"#fff\",\n                    strokeWidth: 2,\n                    hover: {\n                      size: 7,\n                    }\n                  },\n                  yaxis: {\n                    min: 0,\n                    title: {\n                      text: '',\n                    },\n                  }\n                };\n\n      GETMessagesMonth()\n        .then((dataMessages:any)=>{\n          if(dataMessages.mese && dataMessages.anno){\n\n            this.monthSeries = dataMessages.mese.data;\n            this.monthCategories = dataMessages.mese.nome;\n            this.yearSeries = dataMessages.anno.data;\n            this.yearCategories = dataMessages.anno.nome;\n\n            this.series = [{name:this.monthCategories,data:this.monthSeries}]\n            this.categories = this.monthCategories;\n\n            this.chartOptions = {\n              chart: {\n                type: 'line',\n                toolbar: {\n                  show: false\n                }\n              },\n              stroke: {\n                width: 3,\n                curve: 'smooth'\n              },\n              xaxis: {\n                categories: (this.monthCategories).split(\",\"),\n              },\n              markers: {\n                size: 4,\n                colors: [\"#FFA41B\"],\n                strokeColors: \"#fff\",\n                strokeWidth: 2,\n                hover: {\n                  size: 7,\n                }\n              },\n              yaxis: {\n                min: 0,\n                title: {\n                  text: '',\n                },\n              }\n            };\n             \n          }\n        })\n               \n    }\n\n  }\n\n\n\n</script>\n\n<style scoped lang=\"scss\">\n  .hideBox .apexcharts-toolbar{\n    display: none !important;\n  }\n  .hideBox .apexcharts-data-labels{\n    display: none !important;\n  }\n\n</style>\n"]}]}